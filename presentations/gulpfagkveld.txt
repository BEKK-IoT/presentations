class: center, middle

# Gulp.js a awesome!
Vegard Veiset

vegard.veiset@bekk.no

---

# Introduksjon

Hva er gulp?

* byggesystem for javascript
* Streams
* Javascript
* src, dest, watch, task

Install

```
$ npm install gulp
```

---

```html
 <html>
   <body>
  
     <script src="myscript.js">


   </body>
 </html>
```

---

```html
 <html>
   <body>
     <script src="react.js">
     <script src="myscript.js">


   </body>
 </html>
```
---

```html
 <html>
   <body>
     <script src="react.js">
     <script src="myscript.js">
     ...
     <script src="myscript10.js">
   </body>
 </html>
```

---

# Eksempel

```javascript
var gulp = require('gulp');
```

---

# Eksempel

```javascript
var gulp = require('gulp');

gulp.task('copy', function() {
  gulp.src('./folder/*.js')
    .pipe(gulp.dest('./public/'));
});
```

---


# Eksempel

```javascript
var gulp = require('gulp');

gulp.task('copy', function() {
  gulp.src('./folder/*.js')
    .pipe(gulp.dest('./public/'));
});
```

```
$ gulp copy
```

---


# Eksempel

```javascript
var gulp = require('gulp');

gulp.task('copy', function() {
  gulp.src('./folder/*.js')
    .pipe(gulp.dest('./public/'));
});
```

---

# Eksempel

```javascript
var gulp = require('gulp');

gulp.task('copy', function() {
  gulp.src('./folder/*.js')
    .pipe(gulp.dest('./public/'));
});

gulp.task('watch', function () {
  gulp.watch(['./folder/*.js'], ['copy']);
});
```

---

# Eksempel

```javascript
var gulp = require('gulp');

gulp.task('copy', function() {
  gulp.src('./folder/*.js')
    .pipe(gulp.dest('./public/'));
});

gulp.task('watch', function () {
  gulp.watch(['./folder/*.js'], ['copy']);
});
```

```
$ gulp watch
```

---

# Alternativer

Andre byggesystem:

* npm
* Grunt.js


---

# Alternativer

Andre byggesystem:

* npm
* Grunt.js

```javascript
{
  "scripts": {
    "copy" : "cp folder/*.js public/"
  }
}
```


---

# Alternativer

Andre byggesystem:

* npm
* Grunt.js

```javascript
grunt.initConfig({
  copy: {
    main: {
      files: [
        {
          expand: true,
          src: ['folder/*.js'],
          dest: 'public/',
          filter: 'isFile'
        },
      ],
    },
  },
});
grunt.registerTask('copy', ['copy']);
```
---

```html
<body>
  <script>
      const UNICORN_DNA = 2;
      let ponies = [1, 2, 11];
      let unicorns = ponies.map(p => p*UNICORN_DNA);
      console.log(unicorns); // [2, 4, 22]
  </script>
</body>
```

---

```html
<body>
  <script>
      const UNICORN_DNA = 2;
      let ponies = [1, 2, 11];
      let pony_unicorns = ponies.map(p => p*UNICORN_DNA);
      console.log(pony_unicorns); // [2, 4, 22]
  </script>
</body>
```

---

# ES6
```javascript
var babel  = require('gulp-babel');
var concat = require('gulp-concat');

gulp.task('es6', function() {
  gulp.src('src/**/*.js')
    .pipe(babel())
    .pipe(concat('main.js'))
    .pipe(gulp.dest('dist/');
});


```

---

```html
 <html>
   <body>
     <script src="dist/main.js">
   </body>
 </html>
```


---

# Live reload

```javascript
gulp.task('connect', function() {
  connect.server({
    root: 'app',
    livereload: true
  });
});
```

---

# Live reload

```javascript
gulp.task('connect', function() {
  connect.server({
    root: 'app',
    livereload: true
  });
});

gulp.task('javascript', function() {
  gulp.src('./app/app.js')
    .pipe(connect.reload());
});
```

---

class: center, middle

# ?

---

# Do all the things!

```javascript
gulp.task('build', function() {
    return browserify({
        entries: './js/app.jsx', extensions: ['.jsx']
    })
    .transform(reactify)
    .transform(babelify)
    .bundle()
    .pipe(source('bundle.js'))
    .pipe(magic())
    .pipe(gulp.dest('dist'));
});
```

---


# Demo

